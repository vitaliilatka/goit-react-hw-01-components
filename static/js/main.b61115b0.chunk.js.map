{"version":3,"sources":["components/Profile/default.jpg","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","index.js"],"names":["Profile","name","tag","location","avatar","stats","className","src","alt","width","followers","views","likes","defaultImage","Statistics","title","map","id","label","percentage","defaultProps","FriendListItem","isOnline","FriendList","friends","TransactionHistory","items","type","amount","currency","App","user","statisticalData","transactions","ReactDom","render","StrictMode","document","getElementById"],"mappings":"0wGAAe,MAA0B,oC,OCGnCA,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAKC,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,OAAQC,EAAhC,EAAgCA,MAAhC,OACd,sBAAKC,UAAU,UAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBACEC,IAAKH,EACLI,IAAI,gHACJF,UAAU,SACVG,MAAO,MAET,mBAAGH,UAAU,OAAb,SAAqBL,IACrB,oBAAGK,UAAU,MAAb,cAAqBJ,KACrB,mBAAGI,UAAU,WAAb,SAAyBH,OAE3B,qBAAIG,UAAU,QAAd,UACE,+BACE,sBAAMA,UAAU,QAAhB,uBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMK,eAEpC,+BACE,sBAAMJ,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMM,WAEpC,+BACE,sBAAML,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMO,kBAM1CZ,EAAQa,aAAe,CACrBT,OAAQS,EACRR,MAAO,CAAEK,UAAW,EAAGC,MAAO,EAAGC,MAAO,IAe3BZ,QChDTc,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOV,EAAV,EAAUA,MAAV,OACjB,0BAASC,UAAU,aAAnB,UACGS,GAAS,oBAAIT,UAAU,QAAd,SAAuBS,IAEjC,oBAAIT,UAAU,YAAd,SACGD,EAAMW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,WAAd,OACT,qBAAIb,UAAU,OAAd,UACE,sBAAMA,UAAU,QAAhB,SAAyBY,IACzB,uBAAMZ,UAAU,aAAhB,UAA8Ba,EAA9B,SAFwBF,YASlCH,EAAWM,aAAe,CACxBL,MAAO,IAcMD,QChBAO,EAdQ,SAAC,GAAD,IAAGjB,EAAH,EAAGA,OAAQH,EAAX,EAAWA,KAAX,EAAiBqB,SAAjB,OACrB,+BACE,sBAAMhB,UAAU,WAChB,qBAAKA,UAAU,SAASC,IAAKH,EAAQI,IAAKP,EAAMQ,MAAM,OACtD,mBAAGH,UAAU,OAAb,SAAqBL,QCkBVsB,EArBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,oBAAIlB,UAAU,cAAd,SACGkB,EAAQR,KAAI,gBAAGC,EAAH,EAAGA,GAAIb,EAAP,EAAOA,OAAQH,EAAf,EAAeA,KAAMqB,EAArB,EAAqBA,SAArB,OACX,cAAC,EAAD,CAEElB,OAAQA,EACRH,KAAMA,EACNqB,SAAUA,GAHLL,SC4BEQ,EAjCY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACzB,wBAAOpB,UAAU,sBAAjB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACGoB,EAAMV,KAAI,gBAAGC,EAAH,EAAGA,GAAIU,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,SAArB,OACT,+BACE,6BAAKF,IACL,6BAAKC,IACL,6BAAKC,MAHEZ,Y,4BCaFa,MAlBf,WACE,OACE,qCACE,cAAC,EAAD,CACE7B,KAAM8B,EAAK9B,KACXC,IAAK6B,EAAK7B,IACVC,SAAU4B,EAAK5B,SACfC,OAAQ2B,EAAK3B,OACbC,MAAO0B,EAAK1B,QAEd,cAAC,EAAD,CAAYU,MAAM,eAAeV,MAAO2B,IAExC,cAAC,EAAD,CAAYR,QAASA,IACrB,cAAC,EAAD,CAAoBE,MAAOO,IAX7B,Q,MCNJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b61115b0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import PropTypes from 'prop-types';\nimport defaultImage from './default.jpg';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => (\n  <div className=\"profile\">\n    <div className=\"description\">\n      <img\n        src={avatar}\n        alt=\"Аватар пользователя\"\n        className=\"avatar\"\n        width={320}\n      />\n      <p className=\"name\">{name}</p>\n      <p className=\"tag\">@{tag}</p>\n      <p className=\"location\">{location}</p>\n    </div>\n    <ul className=\"stats\">\n      <li>\n        <span className=\"label\">Followers</span>\n        <span className=\"quantity\">{stats.followers}</span>\n      </li>\n      <li>\n        <span className=\"label\">Views</span>\n        <span className=\"quantity\">{stats.views}</span>\n      </li>\n      <li>\n        <span className=\"label\">Likes</span>\n        <span className=\"quantity\">{stats.likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.defaultImage = {\n  avatar: defaultImage,\n  stats: { followers: 0, views: 0, likes: 0 },\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Profile;\n","import PropTypes from 'prop-types';\n\nconst Statistics = ({ title, stats }) => (\n  <section className=\"statistics\">\n    {title && <h2 className=\"title\">{title}</h2>}\n\n    <ul className=\"stat-list\">\n      {stats.map(({ id, label, percentage }) => (\n        <li className=\"item\" key={id}>\n          <span className=\"label\">{label}</span>\n          <span className=\"percentage\">{percentage}%</span>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nStatistics.defaultProps = {\n  title: '',\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }).isRequired,\n  ),\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\n\nconst FriendListItem = ({ avatar, name, isOnline }) => (\n  <li>\n    <span className=\"status\"></span>\n    <img className=\"avatar\" src={avatar} alt={name} width=\"48\" />\n    <p className=\"name\">{name}</p>\n  </li>\n);\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import PropTypes from 'prop-types';\nimport FriendListItem from '../FriendListItem/FriendListItem';\n\nconst FriendList = ({ friends }) => (\n  <ul className=\"friend-list\">\n    {friends.map(({ id, avatar, name, isOnline }) => (\n      <FriendListItem\n        key={id}\n        avatar={avatar}\n        name={name}\n        isOnline={isOnline}\n      />\n    ))}\n  </ul>\n);\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\n\nconst TransactionHistory = ({ items }) => (\n  <table className=\"transaction-history\">\n    <thead>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {items.map(({ id, type, amount, currency }) => (\n        <tr key={id}>\n          <td>{type}</td>\n          <td>{amount}</td>\n          <td>{currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport user from './json/user.json';\nimport statisticalData from './json/statistical-data.json';\nimport friends from './json/friends.json';\nimport transactions from './json/transaction.json';\n\nfunction App() {\n  return (\n    <>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      {/*<Statistics stats = {statisticalData} />*/}\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />;\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDom.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}